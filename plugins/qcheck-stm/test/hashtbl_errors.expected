File "hashtbl.mli", line 20, characters 25-35:
20 | val copy : ('a, 'b) t -> ('a, 'b) t
                              ^^^^^^^^^^
Warning: Skipping copy: functions returning a SUT value cannot be tested.
File "hashtbl.mli", line 64, characters 12-28:
64 | val iter : ('a -> 'b -> unit) -> ('a, 'b) t -> unit
                 ^^^^^^^^^^^^^^^^
Warning: Skipping iter: functions are not supported yet as arguments.
File "hashtbl.mli", line 65, characters 26-47:
65 | val filter_map_inplace : ('a -> 'b -> 'b option) -> ('a, 'b) t -> unit
                               ^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping filter_map_inplace: functions are not supported yet as
         arguments.
File "hashtbl.mli", line 74, characters 12-32:
74 | val fold : ('a -> 'b -> 'c -> 'c) -> ('a, 'b) t -> 'c -> 'c
                 ^^^^^^^^^^^^^^^^^^^^
Warning: Skipping fold: functions are not supported yet as arguments.
File "hashtbl.mli", line 79, characters 0-28:
79 | val randomize : unit -> unit
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping randomize: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 80, characters 0-32:
80 | val is_randomized : unit -> bool
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping is_randomized: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 83, characters 68-78:
83 |   ?random:(* thwart tools/sync_stdlib_docs *) bool -> ('a, 'b) t -> ('a, 'b) t
                                                                         ^^^^^^^^^^
Warning: Skipping rebuild: functions returning a SUT value cannot be tested.
File "hashtbl.mli", line 82, characters 0-92:
82 | val rebuild :
83 |   ?random:(* thwart tools/sync_stdlib_docs *) bool -> ('a, 'b) t -> ('a, 'b) t
Warning: Skipping rebuild: functions without specifications cannot be tested.
File "hashtbl.mli", line 97, characters 0-36:
97 | val stats : ('a, 'b) t -> statistics
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping stats: functions without specifications cannot be tested.
File "hashtbl.mli", line 98, characters 0-42:
98 | val to_seq : ('a, 'b) t -> ('a * 'b) Seq.t
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping to_seq: functions without specifications cannot be tested.
File "hashtbl.mli", line 99, characters 0-39:
99 | val to_seq_keys : ('a, _) t -> 'a Seq.t
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping to_seq_keys: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 100, characters 0-41:
100 | val to_seq_values : (_, 'b) t -> 'b Seq.t
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping to_seq_values: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 101, characters 0-51:
101 | val add_seq : ('a, 'b) t -> ('a * 'b) Seq.t -> unit
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping add_seq: functions without specifications cannot be tested.
File "hashtbl.mli", line 102, characters 0-55:
102 | val replace_seq : ('a, 'b) t -> ('a * 'b) Seq.t -> unit
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping replace_seq: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 103, characters 32-42:
103 | val of_seq : ('a * 'b) Seq.t -> ('a, 'b) t
                                      ^^^^^^^^^^
Warning: Skipping of_seq: functions returning a SUT value cannot be tested.
File "hashtbl.mli", line 103, characters 0-42:
103 | val of_seq : ('a * 'b) Seq.t -> ('a, 'b) t
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping of_seq: functions without specifications cannot be tested.
File "hashtbl.mli", line 104, characters 0-20:
104 | val hash : 'a -> int
      ^^^^^^^^^^^^^^^^^^^^
Warning: Skipping hash: functions without specifications cannot be tested.
File "hashtbl.mli", line 105, characters 0-34:
105 | val seeded_hash : int -> 'a -> int
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping seeded_hash: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 106, characters 0-40:
106 | val hash_param : int -> int -> 'a -> int
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping hash_param: functions without specifications cannot be
         tested.
File "hashtbl.mli", line 107, characters 0-54:
107 | val seeded_hash_param : int -> int -> int -> 'a -> int
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping seeded_hash_param: functions without specifications cannot
         be tested.
File "hashtbl.mli", line 29, characters 0-226:
29 | val find : ('a, 'b) t -> 'a -> 'b
30 | (*@ b = find h a
31 |     raises Not_found -> forall x. not (List.mem (a, x) h.contents)
32 |     raises Not_found -> not (List.mem a (List.map fst h.contents))
33 |     ensures List.mem (a, b) h.contents *)
Warning: Incomplete computation of the returned value in the specification of find. Failure message won't be able to display the expected returned value.
File "hashtbl.mli", line 31, characters 24-66:
31 |     raises Not_found -> forall x. not (List.mem (a, x) h.contents)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning: Skipping clause: unsupported quantification.
File "hashtbl.mli", line 35, characters 0-197:
35 | val find_opt : ('a, 'b) t -> 'a -> 'b option
36 | (*@ o = find_opt h a
37 |     ensures match o with
38 |       | None -> not (List.mem a (List.map fst h.contents))
39 |       | Some b -> List.mem (a, b) h.contents *)
Warning: Incomplete computation of the returned value in the specification of find_opt. Failure message won't be able to display the expected returned value.
File "hashtbl.mli", line 41, characters 0-162:
41 | val find_all : ('a, 'b) t -> 'a -> 'b list
42 | (*@ bs = find_all h a
43 |     ensures bs = Sequence.filter_map (fun (x, y) -> if x = a then Some y else None) h.contents *)
Warning: Incomplete computation of the returned value in the specification of find_all. Failure message won't be able to display the expected returned value.
File "hashtbl.mli", line 45, characters 0-106:
45 | val mem : ('a, 'b) t -> 'a -> bool
46 | (*@ b = mem h a
47 |     ensures b = List.mem a (List.map fst h.contents) *)
Warning: Incomplete computation of the returned value in the specification of mem. Failure message won't be able to display the expected returned value.
