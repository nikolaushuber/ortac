(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32"]
open Lwt_dllist_spec
module Ortac_runtime = Ortac_runtime_qcheck_stm
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = int t
                             let init = Some (fun () -> create ())
                           end)
module Spec =
  struct
    open STM
    type _ ty +=  
      | Node: 'a ty -> 'a node ty 
    let node spec =
      let (ty, show) = spec in
      ((Node ty), (fun n -> Printf.sprintf "Node %s" (show (get n))))
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type sut = SUT.t
    let init_sut = SUT.create
    type cmd =
      | Is_empty 
      | Length 
      | Add_l of int 
      | Add_r of int 
      | Take_l 
      | Take_r 
      | Take_opt_l 
      | Take_opt_r 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Is_empty -> Format.asprintf "%s sut" "is_empty"
      | Length -> Format.asprintf "%s sut" "length"
      | Add_l a_1 ->
          Format.asprintf "%s %a sut" "add_l" (Util.Pp.pp_int true) a_1
      | Add_r a_2 ->
          Format.asprintf "%s %a sut" "add_r" (Util.Pp.pp_int true) a_2
      | Take_l -> Format.asprintf "protect (fun () -> %s sut)" "take_l"
      | Take_r -> Format.asprintf "protect (fun () -> %s sut)" "take_r"
      | Take_opt_l -> Format.asprintf "%s sut" "take_opt_l"
      | Take_opt_r -> Format.asprintf "%s sut" "take_opt_r"
    type nonrec state = {
      contents: int Ortac_runtime.Gospelstdlib.sequence }
    let init_state =
      let () = () in
      {
        contents =
          (try Ortac_runtime.Gospelstdlib.Sequence.empty
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "lwt_dllist_spec.mli";
                            pos_lnum = 46;
                            pos_bol = 1807;
                            pos_cnum = 1834
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "lwt_dllist_spec.mli";
                            pos_lnum = 46;
                            pos_bol = 1807;
                            pos_cnum = 1848
                          }
                      })))
      }
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd
          (let open Gen in
             oneof
               [pure Is_empty;
               pure Length;
               (pure (fun a_1 -> Add_l a_1)) <*> int;
               (pure (fun a_2 -> Add_r a_2)) <*> int;
               pure Take_l;
               pure Take_r;
               pure Take_opt_l;
               pure Take_opt_r])
    let next_state cmd__002_ state__003_ =
      match cmd__002_ with
      | Is_empty -> state__003_
      | Length -> state__003_
      | Add_l a_1 ->
          {
            contents =
              ((try
                  Ortac_runtime.Gospelstdlib.Sequence.cons a_1
                    state__003_.contents
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 64;
                                 pos_bol = 3085;
                                 pos_cnum = 3112
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 64;
                                 pos_bol = 3085;
                                 pos_cnum = 3144
                               }
                           }))))
          }
      | Add_r a_2 ->
          {
            contents =
              ((try
                  Ortac_runtime.Gospelstdlib.Sequence.snoc
                    state__003_.contents a_2
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 70;
                                 pos_bol = 3553;
                                 pos_cnum = 3580
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 70;
                                 pos_bol = 3553;
                                 pos_cnum = 3612
                               }
                           }))))
          }
      | Take_l ->
          {
            contents =
              ((try
                  if
                    state__003_.contents =
                      Ortac_runtime.Gospelstdlib.Sequence.empty
                  then Ortac_runtime.Gospelstdlib.Sequence.empty
                  else
                    Ortac_runtime.Gospelstdlib.Sequence.tl
                      state__003_.contents
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 82;
                                 pos_bol = 4150;
                                 pos_cnum = 4177
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 84;
                                 pos_bol = 4259;
                                 pos_cnum = 4319
                               }
                           }))))
          }
      | Take_r ->
          {
            contents =
              ((try
                  if
                    state__003_.contents =
                      Ortac_runtime.Gospelstdlib.Sequence.empty
                  then Ortac_runtime.Gospelstdlib.Sequence.empty
                  else
                    Ortac_runtime.Gospelstdlib.__mix_Bddub
                      state__003_.contents
                      (Ortac_runtime.Gospelstdlib.(-)
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            state__003_.contents)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 2))
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 96;
                                 pos_bol = 4953;
                                 pos_cnum = 4980
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 98;
                                 pos_bol = 5062;
                                 pos_cnum = 5152
                               }
                           }))))
          }
      | Take_opt_l ->
          {
            contents =
              ((try
                  if
                    (Ortac_runtime.Gospelstdlib.Sequence.length
                       state__003_.contents)
                      = (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                  then Ortac_runtime.Gospelstdlib.Sequence.empty
                  else
                    Ortac_runtime.Gospelstdlib.Sequence.tl
                      state__003_.contents
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 109;
                                 pos_bol = 5855;
                                 pos_cnum = 5882
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 111;
                                 pos_bol = 5969;
                                 pos_cnum = 6029
                               }
                           }))))
          }
      | Take_opt_r ->
          {
            contents =
              ((try
                  match Ortac_runtime.Gospelstdlib.Sequence.length
                          state__003_.contents
                  with
                  | __x__004_ when
                      (=) __x__004_
                        (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                      -> Ortac_runtime.Gospelstdlib.Sequence.empty
                  | l ->
                      Ortac_runtime.Gospelstdlib.__mix_Bddub
                        state__003_.contents
                        (Ortac_runtime.Gospelstdlib.(-) l
                           (Ortac_runtime.Gospelstdlib.integer_of_int 2))
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 121;
                                 pos_bol = 6691;
                                 pos_cnum = 6718
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "lwt_dllist_spec.mli";
                                 pos_lnum = 123;
                                 pos_bol = 6810;
                                 pos_cnum = 6868
                               }
                           }))))
          }
    let precond cmd__013_ state__014_ =
      match cmd__013_ with
      | Is_empty -> true
      | Length -> true
      | Add_l a_1 -> true
      | Add_r a_2 -> true
      | Take_l -> true
      | Take_r -> true
      | Take_opt_l -> true
      | Take_opt_r -> true
    let postcond _ _ _ = true
    let run cmd__015_ sut__016_ =
      match cmd__015_ with
      | Is_empty ->
          Res
            (bool,
              (let tmp__017_ = SUT.pop sut__016_ in
               let res__018_ = is_empty tmp__017_ in
               (SUT.push tmp__017_ sut__016_; res__018_)))
      | Length ->
          Res
            (int,
              (let tmp__019_ = SUT.pop sut__016_ in
               let res__020_ = length tmp__019_ in
               (SUT.push tmp__019_ sut__016_; res__020_)))
      | Add_l a_1 ->
          Res
            ((node int),
              (let tmp__021_ = SUT.pop sut__016_ in
               let res__022_ = add_l a_1 tmp__021_ in
               (SUT.push tmp__021_ sut__016_; res__022_)))
      | Add_r a_2 ->
          Res
            ((node int),
              (let tmp__023_ = SUT.pop sut__016_ in
               let res__024_ = add_r a_2 tmp__023_ in
               (SUT.push tmp__023_ sut__016_; res__024_)))
      | Take_l ->
          Res
            ((result int exn),
              (let tmp__025_ = SUT.pop sut__016_ in
               let res__026_ = protect (fun () -> take_l tmp__025_) () in
               (SUT.push tmp__025_ sut__016_; res__026_)))
      | Take_r ->
          Res
            ((result int exn),
              (let tmp__027_ = SUT.pop sut__016_ in
               let res__028_ = protect (fun () -> take_r tmp__027_) () in
               (SUT.push tmp__027_ sut__016_; res__028_)))
      | Take_opt_l ->
          Res
            ((option int),
              (let tmp__029_ = SUT.pop sut__016_ in
               let res__030_ = take_opt_l tmp__029_ in
               (SUT.push tmp__029_ sut__016_; res__030_)))
      | Take_opt_r ->
          Res
            ((option int),
              (let tmp__031_ = SUT.pop sut__016_ in
               let res__032_ = take_opt_r tmp__031_ in
               (SUT.push tmp__031_ sut__016_; res__032_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_postcond cmd__005_ state__006_ res__007_ =
  let open Spec in
    let open STM in
      let new_state__008_ = lazy (next_state cmd__005_ state__006_) in
      match (cmd__005_, res__007_) with
      | (Is_empty, Res ((Bool, _), b)) ->
          if
            (try
               (b = true) =
                 ((Lazy.force new_state__008_).contents =
                    Ortac_runtime.Gospelstdlib.Sequence.empty)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 51;
                              pos_bol = 2194;
                              pos_cnum = 2208
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 51;
                              pos_bol = 2194;
                              pos_cnum = 2241
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                 (Either.right (Res (Ortac_runtime.dummy, ()))) "is_empty"
                 [("b <-> s.contents = Sequence.empty",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 51;
                          pos_bol = 2194;
                          pos_cnum = 2208
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 51;
                          pos_bol = 2194;
                          pos_cnum = 2241
                        }
                    })])
      | (Length, Res ((Int, _), l_1)) ->
          if
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int l_1) =
                 (Ortac_runtime.Gospelstdlib.Sequence.length
                    (Lazy.force new_state__008_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 58;
                              pos_bol = 2649;
                              pos_cnum = 2663
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 58;
                              pos_bol = 2649;
                              pos_cnum = 2693
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                 (Either.right
                    (Res
                       (integer,
                         (try
                            Ortac_runtime.Gospelstdlib.Sequence.length
                              (Lazy.force new_state__008_).contents
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "lwt_dllist_spec.mli";
                                           pos_lnum = 58;
                                           pos_bol = 2649;
                                           pos_cnum = 2667
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "lwt_dllist_spec.mli";
                                           pos_lnum = 58;
                                           pos_bol = 2649;
                                           pos_cnum = 2693
                                         }
                                     })))))) "length"
                 [("l = Sequence.length s.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 58;
                          pos_bol = 2649;
                          pos_cnum = 2663
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 58;
                          pos_bol = 2649;
                          pos_cnum = 2693
                        }
                    })])
      | (Add_l a_1, Res ((Node (Int), _), n)) -> None
      | (Add_r a_2, Res ((Node (Int), _), n_1)) -> None
      | (Take_l, Res ((Result (Int, Exn), _), a_3)) ->
          (match a_3 with
           | Ok a_3 ->
               if
                 (try
                    if
                      state__006_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      a_3 =
                        (Ortac_runtime.Gospelstdlib.Sequence.hd
                           state__006_.contents)
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 85;
                                   pos_bol = 4320;
                                   pos_cnum = 4334
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 87;
                                   pos_bol = 4394;
                                   pos_cnum = 4445
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                      (Either.right (Res (Ortac_runtime.dummy, ()))) "take_l"
                      [("if old s.contents = Sequence.empty\n              then false\n              else a = Sequence.hd (old s.contents)",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 85;
                               pos_bol = 4320;
                               pos_cnum = 4334
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 87;
                               pos_bol = 4394;
                               pos_cnum = 4445
                             }
                         })])
           | Error (Empty) ->
               if
                 (try
                    let __t1__009_ =
                      state__006_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    let __t2__010_ =
                      Ortac_runtime.Gospelstdlib.Sequence.empty =
                        (Lazy.force new_state__008_).contents in
                    __t1__009_ && __t2__010_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 88;
                                   pos_bol = 4446;
                                   pos_cnum = 4468
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 88;
                                   pos_bol = 4446;
                                   pos_cnum = 4512
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                      (Either.left "Empty") "take_l"
                      [("old s.contents = Sequence.empty = s.contents",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 88;
                               pos_bol = 4446;
                               pos_cnum = 4468
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 88;
                               pos_bol = 4446;
                               pos_cnum = 4512
                             }
                         })])
           | _ -> None)
      | (Take_r, Res ((Result (Int, Exn), _), a_4)) ->
          (match a_4 with
           | Ok a_4 ->
               if
                 (try
                    if
                      state__006_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      a_4 =
                        (Ortac_runtime.Gospelstdlib.__mix_Bub
                           state__006_.contents
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 state__006_.contents)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 99;
                                   pos_bol = 5153;
                                   pos_cnum = 5167
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 101;
                                   pos_bol = 5227;
                                   pos_cnum = 5304
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                      (Either.right (Res (Ortac_runtime.dummy, ()))) "take_r"
                      [("if old s.contents = Sequence.empty\n              then false\n              else a = (old s.contents)[Sequence.length (old s.contents) - 1]",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 99;
                               pos_bol = 5153;
                               pos_cnum = 5167
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 101;
                               pos_bol = 5227;
                               pos_cnum = 5304
                             }
                         })])
           | Error (Empty) ->
               if
                 (try
                    let __t1__011_ =
                      state__006_.contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    let __t2__012_ =
                      Ortac_runtime.Gospelstdlib.Sequence.empty =
                        (Lazy.force new_state__008_).contents in
                    __t1__011_ && __t2__012_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 102;
                                   pos_bol = 5305;
                                   pos_cnum = 5327
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "lwt_dllist_spec.mli";
                                   pos_lnum = 102;
                                   pos_bol = 5305;
                                   pos_cnum = 5371
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                      (Either.left "Empty") "take_r"
                      [("old s.contents = Sequence.empty = s.contents",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 102;
                               pos_bol = 5305;
                               pos_cnum = 5327
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "lwt_dllist_spec.mli";
                               pos_lnum = 102;
                               pos_bol = 5305;
                               pos_cnum = 5371
                             }
                         })])
           | _ -> None)
      | (Take_opt_l, Res ((Option (Int), _), o)) ->
          if
            (try
               state__006_.contents =
                 (match o with
                  | None -> Ortac_runtime.Gospelstdlib.Sequence.empty
                  | Some a_5 ->
                      Ortac_runtime.Gospelstdlib.Sequence.cons a_5
                        (Lazy.force new_state__008_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 112;
                              pos_bol = 6030;
                              pos_cnum = 6044
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 114;
                              pos_bol = 6131;
                              pos_cnum = 6201
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                 (Either.right (Res (Ortac_runtime.dummy, ()))) "take_opt_l"
                 [("old s.contents = match o with\n                                | None -> Sequence.empty\n                                | Some a -> Sequence.cons a s.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 112;
                          pos_bol = 6030;
                          pos_cnum = 6044
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 114;
                          pos_bol = 6131;
                          pos_cnum = 6201
                        }
                    })])
      | (Take_opt_r, Res ((Option (Int), _), o_1)) ->
          if
            (try
               state__006_.contents =
                 (match o_1 with
                  | None -> Ortac_runtime.Gospelstdlib.Sequence.empty
                  | Some a_6 ->
                      Ortac_runtime.Gospelstdlib.Sequence.snoc
                        (Lazy.force new_state__008_).contents a_6)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 124;
                              pos_bol = 6869;
                              pos_cnum = 6883
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "lwt_dllist_spec.mli";
                              pos_lnum = 126;
                              pos_bol = 6970;
                              pos_cnum = 7040
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Lwt_dllist_spec" "create ()"
                 (Either.right (Res (Ortac_runtime.dummy, ()))) "take_opt_r"
                 [("old s.contents = match o with\n                                | None -> Sequence.empty\n                                | Some a -> Sequence.snoc s.contents a",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 124;
                          pos_bol = 6869;
                          pos_cnum = 6883
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "lwt_dllist_spec.mli";
                          pos_lnum = 126;
                          pos_bol = 6970;
                          pos_cnum = 7040
                        }
                    })])
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Lwt_dllist_spec STM tests"
        check_init_state ortac_postcond])
