(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32"]
open Varray_circular_spec
module Ortac_runtime = Ortac_runtime_qcheck_stm
let inside i s =
  try
    if
      let __t1__001_ =
        Ortac_runtime.Gospelstdlib.(<=)
          (Ortac_runtime.Gospelstdlib.integer_of_int 0) i in
      let __t2__002_ =
        Ortac_runtime.Gospelstdlib.(<) i
          (Ortac_runtime.Gospelstdlib.Sequence.length s) in
      __t1__001_ && __t2__002_
    then true
    else false
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 4;
                   pos_bol = 378;
                   pos_cnum = 386
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 4;
                   pos_bol = 378;
                   pos_cnum = 412
                 }
             }))
let proj e =
  try e
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 14;
                   pos_bol = 1130;
                   pos_cnum = 1170
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "varray_circular_spec.mli";
                   pos_lnum = 14;
                   pos_bol = 1130;
                   pos_cnum = 1171
                 }
             }))
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = char t
                             let init = Some (fun () -> make 42 'a')
                           end)
module ModelElt =
  struct
    type nonrec elt = {
      contents: char Ortac_runtime.Gospelstdlib.sequence }
    let init =
      Some
        (let n = 42
         and x_8 = 'a' in
         {
           contents =
             (try
                Ortac_runtime.Gospelstdlib.Sequence.init
                  (Ortac_runtime.Gospelstdlib.integer_of_int n)
                  (fun _ -> proj x_8)
              with
              | e ->
                  raise
                    (Ortac_runtime.Partial_function
                       (e,
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 154;
                               pos_bol = 9141;
                               pos_cnum = 9168
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 154;
                               pos_bol = 9141;
                               pos_cnum = 9201
                             }
                         })))
         })
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    module QCheck =
      struct
        include QCheck
        module Gen =
          struct
            include Gen
            include QCheck.Gen
            let int = small_signed_int
            let elt gen = gen
          end
      end
    module Util =
      struct
        module Pp =
          struct include Util.Pp
                 include Util.Pp
                 let pp_elt pp = pp end
      end
    type _ ty +=  
      | Elt: 'a ty -> 'a elt ty 
    let elt spec =
      let (ty, show) = spec in
      ((Elt ty), (fun x -> Printf.sprintf "Elt %s" (show x)))
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type sut = SUT.t
    let init_sut = SUT.create
    type state = Model.t
    let init_state = Model.create ()
    type cmd =
      | Push_back of char elt 
      | Pop_back 
      | Push_front of char elt 
      | Pop_front 
      | Insert_at of int * char elt 
      | Pop_at of int 
      | Delete_at of int 
      | Get of int 
      | Set of int * char elt 
      | Length 
      | Is_empty 
      | Fill of int * int * char elt 
    let show_cmd cmd__003_ =
      match cmd__003_ with
      | Push_back x ->
          Format.asprintf "%s sut %a" "push_back"
            (Util.Pp.pp_elt Util.Pp.pp_char true) x
      | Pop_back -> Format.asprintf "protect (fun () -> %s sut)" "pop_back"
      | Push_front x_1 ->
          Format.asprintf "%s sut %a" "push_front"
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_1
      | Pop_front -> Format.asprintf "protect (fun () -> %s sut)" "pop_front"
      | Insert_at (i_1, x_2) ->
          Format.asprintf "protect (fun () -> %s sut %a %a)" "insert_at"
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_elt Util.Pp.pp_char true)
            x_2
      | Pop_at i_2 ->
          Format.asprintf "protect (fun () -> %s sut %a)" "pop_at"
            (Util.Pp.pp_int true) i_2
      | Delete_at i_3 ->
          Format.asprintf "protect (fun () -> %s sut %a)" "delete_at"
            (Util.Pp.pp_int true) i_3
      | Get i_4 ->
          Format.asprintf "protect (fun () -> %s sut %a)" "get"
            (Util.Pp.pp_int true) i_4
      | Set (i_5, v) ->
          Format.asprintf "protect (fun () -> %s sut %a %a)" "set"
            (Util.Pp.pp_int true) i_5 (Util.Pp.pp_elt Util.Pp.pp_char true) v
      | Length -> Format.asprintf "%s sut" "length"
      | Is_empty -> Format.asprintf "%s sut" "is_empty"
      | Fill (pos, len, x_3) ->
          Format.asprintf "protect (fun () -> %s sut %a %a %a)" "fill"
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_elt Util.Pp.pp_char true) x_3
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd
          (let open Gen in
             oneof
               [(pure (fun x -> Push_back x)) <*> (elt char);
               pure Pop_back;
               (pure (fun x_1 -> Push_front x_1)) <*> (elt char);
               pure Pop_front;
               ((pure (fun i_1 -> fun x_2 -> Insert_at (i_1, x_2))) <*> int)
                 <*> (elt char);
               (pure (fun i_2 -> Pop_at i_2)) <*> int;
               (pure (fun i_3 -> Delete_at i_3)) <*> int;
               (pure (fun i_4 -> Get i_4)) <*> int;
               ((pure (fun i_5 -> fun v -> Set (i_5, v))) <*> int) <*>
                 (elt char);
               pure Length;
               pure Is_empty;
               (((pure
                    (fun pos -> fun len -> fun x_3 -> Fill (pos, len, x_3)))
                   <*> int)
                  <*> int)
                 <*> (elt char)])
    let next_state cmd__004_ state__005_ =
      match cmd__004_ with
      | Push_back x ->
          let tmp__006_ = Model.get state__005_ 0 in
          Model.push (Model.drop_n state__005_ 1)
            {
              contents =
                (try
                   Ortac_runtime.Gospelstdlib.Sequence.snoc
                     tmp__006_.contents (proj x)
                 with
                 | e ->
                     raise
                       (Ortac_runtime.Partial_function
                          (e,
                            {
                              Ortac_runtime.start =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 23;
                                  pos_bol = 1629;
                                  pos_cnum = 1656
                                };
                              Ortac_runtime.stop =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 23;
                                  pos_bol = 1629;
                                  pos_cnum = 1695
                                }
                            })))
            }
      | Pop_back ->
          let tmp__007_ = Model.get state__005_ 0 in
          Model.push (Model.drop_n state__005_ 1)
            {
              contents =
                (try
                   if
                     tmp__007_.contents =
                       Ortac_runtime.Gospelstdlib.Sequence.empty
                   then Ortac_runtime.Gospelstdlib.Sequence.empty
                   else
                     Ortac_runtime.Gospelstdlib.__mix_Bddub
                       tmp__007_.contents
                       (Ortac_runtime.Gospelstdlib.(-)
                          (Ortac_runtime.Gospelstdlib.Sequence.length
                             tmp__007_.contents)
                          (Ortac_runtime.Gospelstdlib.integer_of_int 2))
                 with
                 | e ->
                     raise
                       (Ortac_runtime.Partial_function
                          (e,
                            {
                              Ortac_runtime.start =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 30;
                                  pos_bol = 2142;
                                  pos_cnum = 2169
                                };
                              Ortac_runtime.stop =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 32;
                                  pos_bol = 2251;
                                  pos_cnum = 2339
                                }
                            })))
            }
      | Push_front x_1 ->
          let tmp__008_ = Model.get state__005_ 0 in
          Model.push (Model.drop_n state__005_ 1)
            {
              contents =
                (try
                   Ortac_runtime.Gospelstdlib.Sequence.cons (proj x_1)
                     tmp__008_.contents
                 with
                 | e ->
                     raise
                       (Ortac_runtime.Partial_function
                          (e,
                            {
                              Ortac_runtime.start =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 44;
                                  pos_bol = 3126;
                                  pos_cnum = 3153
                                };
                              Ortac_runtime.stop =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 44;
                                  pos_bol = 3126;
                                  pos_cnum = 3192
                                }
                            })))
            }
      | Pop_front ->
          let tmp__009_ = Model.get state__005_ 0 in
          Model.push (Model.drop_n state__005_ 1)
            {
              contents =
                (try
                   if
                     tmp__009_.contents =
                       Ortac_runtime.Gospelstdlib.Sequence.empty
                   then Ortac_runtime.Gospelstdlib.Sequence.empty
                   else
                     Ortac_runtime.Gospelstdlib.Sequence.tl
                       tmp__009_.contents
                 with
                 | e ->
                     raise
                       (Ortac_runtime.Partial_function
                          (e,
                            {
                              Ortac_runtime.start =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 53;
                                  pos_bol = 3714;
                                  pos_cnum = 3741
                                };
                              Ortac_runtime.stop =
                                {
                                  pos_fname = "varray_circular_spec.mli";
                                  pos_lnum = 55;
                                  pos_bol = 3823;
                                  pos_cnum = 3883
                                }
                            })))
            }
      | Insert_at (i_1, x_2) ->
          let tmp__010_ = Model.get state__005_ 0 in
          if
            (try
               let __t1__013_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
               let __t2__014_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      tmp__010_.contents) in
               __t1__013_ && __t2__014_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 72;
                              pos_bol = 4784;
                              pos_cnum = 4797
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 72;
                              pos_bol = 4784;
                              pos_cnum = 4833
                            }
                        })))
          then
            Model.push (Model.drop_n state__005_ 1)
              {
                contents =
                  (try
                     if
                       let __t1__011_ =
                         Ortac_runtime.Gospelstdlib.(<=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                       let __t2__012_ =
                         Ortac_runtime.Gospelstdlib.(<=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                           (Ortac_runtime.Gospelstdlib.Sequence.length
                              tmp__010_.contents) in
                       __t1__011_ && __t2__012_
                     then
                       Ortac_runtime.Gospelstdlib.(++)
                         (Ortac_runtime.Gospelstdlib.__mix_Bddub
                            tmp__010_.contents
                            (Ortac_runtime.Gospelstdlib.(-)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                         (Ortac_runtime.Gospelstdlib.Sequence.cons (proj x_2)
                            (Ortac_runtime.Gospelstdlib.__mix_Buddb
                               tmp__010_.contents
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_1)))
                     else tmp__010_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 74;
                                    pos_bol = 4860;
                                    pos_cnum = 4891
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 76;
                                    pos_bol = 5033;
                                    pos_cnum = 5081
                                  }
                              })))
              }
          else state__005_
      | Pop_at i_2 ->
          let tmp__015_ = Model.get state__005_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                  tmp__015_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 89;
                              pos_bol = 5727;
                              pos_cnum = 5740
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 89;
                              pos_bol = 5727;
                              pos_cnum = 5759
                            }
                        })))
          then
            Model.push (Model.drop_n state__005_ 1)
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++)
                       (Ortac_runtime.Gospelstdlib.__mix_Bddub
                          tmp__015_.contents
                          (Ortac_runtime.Gospelstdlib.(-)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                       (Ortac_runtime.Gospelstdlib.__mix_Buddb
                          tmp__015_.contents
                          (Ortac_runtime.Gospelstdlib.(+)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 91;
                                    pos_bol = 5786;
                                    pos_cnum = 5838
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 91;
                                    pos_bol = 5786;
                                    pos_cnum = 5840
                                  }
                              })))
              }
          else state__005_
      | Delete_at i_3 ->
          let tmp__016_ = Model.get state__005_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                  tmp__016_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 102;
                              pos_bol = 6426;
                              pos_cnum = 6439
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 102;
                              pos_bol = 6426;
                              pos_cnum = 6458
                            }
                        })))
          then
            Model.push (Model.drop_n state__005_ 1)
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++)
                       (Ortac_runtime.Gospelstdlib.__mix_Bddub
                          tmp__016_.contents
                          (Ortac_runtime.Gospelstdlib.(-)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                       (Ortac_runtime.Gospelstdlib.__mix_Buddb
                          tmp__016_.contents
                          (Ortac_runtime.Gospelstdlib.(+)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 104;
                                    pos_bol = 6485;
                                    pos_cnum = 6537
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 104;
                                    pos_bol = 6485;
                                    pos_cnum = 6539
                                  }
                              })))
              }
          else state__005_
      | Get i_4 -> state__005_
      | Set (i_5, v) ->
          let tmp__018_ = Model.get state__005_ 0 in
          if
            (try
               (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                  tmp__018_.contents)
                 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8077;
                              pos_cnum = 8090
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8077;
                              pos_cnum = 8109
                            }
                        })))
          then
            Model.push (Model.drop_n state__005_ 1)
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.set
                       tmp__018_.contents
                       (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                       (proj v)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 139;
                                    pos_bol = 8136;
                                    pos_cnum = 8163
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 139;
                                    pos_bol = 8136;
                                    pos_cnum = 8203
                                  }
                              })))
              }
          else state__005_
      | Length -> state__005_
      | Is_empty -> state__005_
      | Fill (pos, len, x_3) ->
          let tmp__021_ = Model.get state__005_ 0 in
          if
            (try
               let __t1__024_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
               let __t2__025_ =
                 let __t1__026_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                 let __t2__027_ =
                   Ortac_runtime.Gospelstdlib.(<)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len))
                     (Ortac_runtime.Gospelstdlib.Sequence.length
                        tmp__021_.contents) in
                 __t1__026_ && __t2__027_ in
               __t1__024_ && __t2__025_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 211;
                              pos_bol = 12981;
                              pos_cnum = 12994
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 211;
                              pos_bol = 12981;
                              pos_cnum = 13056
                            }
                        })))
          then
            Model.push (Model.drop_n state__005_ 1)
              {
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.init
                       (Ortac_runtime.Gospelstdlib.Sequence.length
                          tmp__021_.contents)
                       (fun i_6 ->
                          if
                            let __t1__022_ =
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   pos) i_6 in
                            let __t2__023_ =
                              Ortac_runtime.Gospelstdlib.(<) i_6
                                (Ortac_runtime.Gospelstdlib.(+)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      pos)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      len)) in
                            __t1__022_ && __t2__023_
                          then proj x_3
                          else
                            Ortac_runtime.Gospelstdlib.__mix_Bub
                              tmp__021_.contents i_6)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 213;
                                    pos_bol = 13083;
                                    pos_cnum = 13110
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 213;
                                    pos_bol = 13083;
                                    pos_cnum = 13230
                                  }
                              })))
              }
          else state__005_
    let precond cmd__074_ state__075_ =
      match cmd__074_ with
      | Push_back x -> true
      | Pop_back -> true
      | Push_front x_1 -> true
      | Pop_front -> true
      | Insert_at (i_1, x_2) -> true
      | Pop_at i_2 -> true
      | Delete_at i_3 -> true
      | Get i_4 -> true
      | Set (i_5, v) -> true
      | Length -> true
      | Is_empty -> true
      | Fill (pos, len, x_3) -> true
    let postcond _ _ _ = true
    let run cmd__076_ sut__077_ =
      match cmd__076_ with
      | Push_back x ->
          Res
            (unit,
              (let tmp__078_ = SUT.pop sut__077_ in
               let res__079_ = push_back tmp__078_ x in
               (SUT.push tmp__078_ sut__077_; res__079_)))
      | Pop_back ->
          Res
            ((result (elt char) exn),
              (let tmp__080_ = SUT.pop sut__077_ in
               let res__081_ = protect (fun () -> pop_back tmp__080_) () in
               (SUT.push tmp__080_ sut__077_; res__081_)))
      | Push_front x_1 ->
          Res
            (unit,
              (let tmp__082_ = SUT.pop sut__077_ in
               let res__083_ = push_front tmp__082_ x_1 in
               (SUT.push tmp__082_ sut__077_; res__083_)))
      | Pop_front ->
          Res
            ((result (elt char) exn),
              (let tmp__084_ = SUT.pop sut__077_ in
               let res__085_ = protect (fun () -> pop_front tmp__084_) () in
               (SUT.push tmp__084_ sut__077_; res__085_)))
      | Insert_at (i_1, x_2) ->
          Res
            ((result unit exn),
              (let tmp__086_ = SUT.pop sut__077_ in
               let res__087_ =
                 protect (fun () -> insert_at tmp__086_ i_1 x_2) () in
               (SUT.push tmp__086_ sut__077_; res__087_)))
      | Pop_at i_2 ->
          Res
            ((result (elt char) exn),
              (let tmp__088_ = SUT.pop sut__077_ in
               let res__089_ = protect (fun () -> pop_at tmp__088_ i_2) () in
               (SUT.push tmp__088_ sut__077_; res__089_)))
      | Delete_at i_3 ->
          Res
            ((result unit exn),
              (let tmp__090_ = SUT.pop sut__077_ in
               let res__091_ = protect (fun () -> delete_at tmp__090_ i_3) () in
               (SUT.push tmp__090_ sut__077_; res__091_)))
      | Get i_4 ->
          Res
            ((result (elt char) exn),
              (let tmp__092_ = SUT.pop sut__077_ in
               let res__093_ = protect (fun () -> get tmp__092_ i_4) () in
               (SUT.push tmp__092_ sut__077_; res__093_)))
      | Set (i_5, v) ->
          Res
            ((result unit exn),
              (let tmp__094_ = SUT.pop sut__077_ in
               let res__095_ = protect (fun () -> set tmp__094_ i_5 v) () in
               (SUT.push tmp__094_ sut__077_; res__095_)))
      | Length ->
          Res
            (int,
              (let tmp__096_ = SUT.pop sut__077_ in
               let res__097_ = length tmp__096_ in
               (SUT.push tmp__096_ sut__077_; res__097_)))
      | Is_empty ->
          Res
            (bool,
              (let tmp__098_ = SUT.pop sut__077_ in
               let res__099_ = is_empty tmp__098_ in
               (SUT.push tmp__098_ sut__077_; res__099_)))
      | Fill (pos, len, x_3) ->
          Res
            ((result unit exn),
              (let tmp__100_ = SUT.pop sut__077_ in
               let res__101_ =
                 protect (fun () -> fill tmp__100_ pos len x_3) () in
               (SUT.push tmp__100_ sut__077_; res__101_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_postcond cmd__028_ state__029_ res__030_ =
  let open Spec in
    let open STM in
      let new_state__031_ = lazy (next_state cmd__028_ state__029_) in
      match (cmd__028_, res__030_) with
      | (Push_back x, Res ((Unit, _), _)) -> None
      | (Pop_back, Res ((Result (Elt (Char), Exn), _), x_4)) ->
          (match x_4 with
           | Ok x_4 ->
               if
                 let t_new__034_ =
                   lazy (Model.get (Lazy.force new_state__031_) 0) in
                 let t_old__033_ = lazy (Model.get state__029_ 0) in
                 (try
                    if
                      (Lazy.force t_old__033_).contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      (proj x_4) =
                        (Ortac_runtime.Gospelstdlib.__mix_Bub
                           (Lazy.force t_old__033_).contents
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 (Lazy.force t_old__033_).contents)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 33;
                                   pos_bol = 2340;
                                   pos_cnum = 2354
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 35;
                                   pos_bol = 2414;
                                   pos_cnum = 2496
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Either.right (Res (Ortac_runtime.dummy, ())))
                      "pop_back"
                      [("if old t.contents = Sequence.empty\n              then false\n              else proj x = (old t.contents)[Sequence.length (old t.contents) - 1]",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 33;
                               pos_bol = 2340;
                               pos_cnum = 2354
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 35;
                               pos_bol = 2414;
                               pos_cnum = 2496
                             }
                         })])
           | Error (Not_found) ->
               if
                 let t_new__036_ =
                   lazy (Model.get (Lazy.force new_state__031_) 0) in
                 let t_old__035_ = lazy (Model.get state__029_ 0) in
                 (try
                    let __t1__037_ =
                      (Lazy.force t_new__036_).contents =
                        (Lazy.force t_old__035_).contents in
                    let __t2__038_ =
                      (Lazy.force t_old__035_).contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    __t1__037_ && __t2__038_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 36;
                                   pos_bol = 2497;
                                   pos_cnum = 2523
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 36;
                                   pos_bol = 2497;
                                   pos_cnum = 2567
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Either.left "Not_found") "pop_back"
                      [("t.contents = old t.contents = Sequence.empty",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 36;
                               pos_bol = 2497;
                               pos_cnum = 2523
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 36;
                               pos_bol = 2497;
                               pos_cnum = 2567
                             }
                         })])
           | _ -> None)
      | (Push_front x_1, Res ((Unit, _), _)) -> None
      | (Pop_front, Res ((Result (Elt (Char), Exn), _), x_5)) ->
          (match x_5 with
           | Ok x_5 ->
               if
                 let t_new__042_ =
                   lazy (Model.get (Lazy.force new_state__031_) 0) in
                 let t_old__041_ = lazy (Model.get state__029_ 0) in
                 (try
                    if
                      (Lazy.force t_old__041_).contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty
                    then false
                    else
                      (proj x_5) =
                        (Ortac_runtime.Gospelstdlib.Sequence.hd
                           (Lazy.force t_old__041_).contents)
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 56;
                                   pos_bol = 3884;
                                   pos_cnum = 3898
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 58;
                                   pos_bol = 3958;
                                   pos_cnum = 4014
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Either.right (Res (Ortac_runtime.dummy, ())))
                      "pop_front"
                      [("if old t.contents = Sequence.empty\n              then false\n              else proj x = Sequence.hd (old t.contents)",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 56;
                               pos_bol = 3884;
                               pos_cnum = 3898
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 58;
                               pos_bol = 3958;
                               pos_cnum = 4014
                             }
                         })])
           | Error (Not_found) ->
               if
                 let t_new__044_ =
                   lazy (Model.get (Lazy.force new_state__031_) 0) in
                 let t_old__043_ = lazy (Model.get state__029_ 0) in
                 (try
                    let __t1__045_ =
                      (Lazy.force t_new__044_).contents =
                        (Lazy.force t_old__043_).contents in
                    let __t2__046_ =
                      (Lazy.force t_old__043_).contents =
                        Ortac_runtime.Gospelstdlib.Sequence.empty in
                    __t1__045_ && __t2__046_
                  with
                  | e ->
                      raise
                        (Ortac_runtime.Partial_function
                           (e,
                             {
                               Ortac_runtime.start =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 59;
                                   pos_bol = 4015;
                                   pos_cnum = 4041
                                 };
                               Ortac_runtime.stop =
                                 {
                                   pos_fname = "varray_circular_spec.mli";
                                   pos_lnum = 59;
                                   pos_bol = 4015;
                                   pos_cnum = 4085
                                 }
                             })))
               then None
               else
                 Some
                   (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                      (Either.left "Not_found") "pop_front"
                      [("t.contents = old t.contents = Sequence.empty",
                         {
                           Ortac_runtime.start =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 59;
                               pos_bol = 4015;
                               pos_cnum = 4041
                             };
                           Ortac_runtime.stop =
                             {
                               pos_fname = "varray_circular_spec.mli";
                               pos_lnum = 59;
                               pos_bol = 4015;
                               pos_cnum = 4085
                             }
                         })])
           | _ -> None)
      | (Insert_at (i_1, x_2), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__048_ = Model.get state__029_ 0 in
                   try
                     let __t1__049_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                     let __t2__050_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            tmp__048_.contents) in
                     __t1__049_ && __t2__050_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4797
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4833
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument")
                        "insert_at"
                        [("0 <= i <= Sequence.length t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 72;
                                 pos_bol = 4784;
                                 pos_cnum = 4797
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 72;
                                 pos_bol = 4784;
                                 pos_cnum = 4833
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__048_ = Model.get state__029_ 0 in
                      (try
                         let __t1__049_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                         let __t2__050_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                             (Ortac_runtime.Gospelstdlib.Sequence.length
                                tmp__048_.contents) in
                         __t1__049_ && __t2__050_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 72;
                                        pos_bol = 4784;
                                        pos_cnum = 4797
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 72;
                                        pos_bol = 4784;
                                        pos_cnum = 4833
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "insert_at"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4797
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 72;
                                    pos_bol = 4784;
                                    pos_cnum = 4833
                                  }
                              })])))
      | (Pop_at i_2, Res ((Result (Elt (Char), Exn), _), x_6)) ->
          (match if
                   let tmp__053_ = Model.get state__029_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                        tmp__053_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5740
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5759
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument")
                        "pop_at"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 89;
                                 pos_bol = 5727;
                                 pos_cnum = 5740
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 89;
                                 pos_bol = 5727;
                                 pos_cnum = 5759
                               }
                           })])
           with
           | None ->
               (match x_6 with
                | Ok x_6 ->
                    if
                      let t_new__052_ =
                        lazy (Model.get (Lazy.force new_state__031_) 0) in
                      let t_old__051_ = lazy (Model.get state__029_ 0) in
                      (try
                         (proj x_6) =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force t_old__051_).contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_2))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 92;
                                        pos_bol = 5864;
                                        pos_cnum = 5878
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 92;
                                        pos_bol = 5864;
                                        pos_cnum = 5906
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Either.right (Res (Ortac_runtime.dummy, ())))
                           "pop_at"
                           [("(proj x) = old t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 92;
                                    pos_bol = 5864;
                                    pos_cnum = 5878
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 92;
                                    pos_bol = 5864;
                                    pos_cnum = 5906
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match x_6 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__053_ = Model.get state__029_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                            tmp__053_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 89;
                                        pos_bol = 5727;
                                        pos_cnum = 5740
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 89;
                                        pos_bol = 5727;
                                        pos_cnum = 5759
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "pop_at"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5740
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 89;
                                    pos_bol = 5727;
                                    pos_cnum = 5759
                                  }
                              })])))
      | (Delete_at i_3, Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__056_ = Model.get state__029_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                        tmp__056_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6439
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6458
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument")
                        "delete_at"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 102;
                                 pos_bol = 6426;
                                 pos_cnum = 6439
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 102;
                                 pos_bol = 6426;
                                 pos_cnum = 6458
                               }
                           })])
           with
           | None ->
               (match res with
                | Ok _ ->
                    if
                      let t_new__055_ =
                        lazy (Model.get (Lazy.force new_state__031_) 0) in
                      let t_old__054_ = lazy (Model.get state__029_ 0) in
                      (try
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            (Lazy.force t_new__055_).contents)
                           =
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.Sequence.length
                                 (Lazy.force t_old__054_).contents)
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 105;
                                        pos_bol = 6563;
                                        pos_cnum = 6577
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 105;
                                        pos_bol = 6563;
                                        pos_cnum = 6642
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.right (Res (unit, ())))
                           "delete_at"
                           [("Sequence.length t.contents = Sequence.length (old t.contents) - 1",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 105;
                                    pos_bol = 6563;
                                    pos_cnum = 6577
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 105;
                                    pos_bol = 6563;
                                    pos_cnum = 6642
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__056_ = Model.get state__029_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            tmp__056_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 102;
                                        pos_bol = 6426;
                                        pos_cnum = 6439
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 102;
                                        pos_bol = 6426;
                                        pos_cnum = 6458
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "delete_at"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6439
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 102;
                                    pos_bol = 6426;
                                    pos_cnum = 6458
                                  }
                              })])))
      | (Get i_4, Res ((Result (Elt (Char), Exn), _), x_7)) ->
          (match if
                   let tmp__059_ = Model.get state__029_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                        tmp__059_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7629
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7648
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument") "get"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 128;
                                 pos_bol = 7616;
                                 pos_cnum = 7629
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 128;
                                 pos_bol = 7616;
                                 pos_cnum = 7648
                               }
                           })])
           with
           | None ->
               (match x_7 with
                | Ok x_7 ->
                    if
                      let t_new__058_ =
                        lazy (Model.get (Lazy.force new_state__031_) 0) in
                      let t_old__057_ = lazy (Model.get state__029_ 0) in
                      (try
                         (proj x_7) =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force t_new__058_).contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i_4))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 127;
                                        pos_bol = 7577;
                                        pos_cnum = 7591
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 127;
                                        pos_bol = 7577;
                                        pos_cnum = 7615
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'"
                           (Either.right (Res (Ortac_runtime.dummy, ())))
                           "get"
                           [("(proj x) = t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 127;
                                    pos_bol = 7577;
                                    pos_cnum = 7591
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 127;
                                    pos_bol = 7577;
                                    pos_cnum = 7615
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match x_7 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__059_ = Model.get state__029_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_4)
                            tmp__059_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 128;
                                        pos_bol = 7616;
                                        pos_cnum = 7629
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 128;
                                        pos_bol = 7616;
                                        pos_cnum = 7648
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "get"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7629
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 128;
                                    pos_bol = 7616;
                                    pos_cnum = 7648
                                  }
                              })])))
      | (Set (i_5, v), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__060_ = Model.get state__029_ 0 in
                   try
                     (inside (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                        tmp__060_.contents)
                       = true
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8090
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8109
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument") "set"
                        [("inside i t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 137;
                                 pos_bol = 8077;
                                 pos_cnum = 8090
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 137;
                                 pos_bol = 8077;
                                 pos_cnum = 8109
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__060_ = Model.get state__029_ 0 in
                      (try
                         (inside
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_5)
                            tmp__060_.contents)
                           = true
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 137;
                                        pos_bol = 8077;
                                        pos_cnum = 8090
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 137;
                                        pos_bol = 8077;
                                        pos_cnum = 8109
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "set"
                           [("inside i t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8090
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8077;
                                    pos_cnum = 8109
                                  }
                              })])))
      | (Length, Res ((Int, _), l)) ->
          if
            let t_new__064_ = lazy (Model.get (Lazy.force new_state__031_) 0) in
            let t_old__063_ = lazy (Model.get state__029_ 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int l) =
                 (Ortac_runtime.Gospelstdlib.Sequence.length
                    (Lazy.force t_new__064_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 144;
                              pos_bol = 8634;
                              pos_cnum = 8648
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 144;
                              pos_bol = 8634;
                              pos_cnum = 8678
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                 (Either.right
                    (Res
                       (integer,
                         (let t_new__062_ =
                            lazy (Model.get (Lazy.force new_state__031_) 0) in
                          let t_old__061_ = lazy (Model.get state__029_ 0) in
                          try
                            Ortac_runtime.Gospelstdlib.Sequence.length
                              (Lazy.force t_new__062_).contents
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname =
                                             "varray_circular_spec.mli";
                                           pos_lnum = 144;
                                           pos_bol = 8634;
                                           pos_cnum = 8652
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname =
                                             "varray_circular_spec.mli";
                                           pos_lnum = 144;
                                           pos_bol = 8634;
                                           pos_cnum = 8678
                                         }
                                     })))))) "length"
                 [("l = Sequence.length t.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 144;
                          pos_bol = 8634;
                          pos_cnum = 8648
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 144;
                          pos_bol = 8634;
                          pos_cnum = 8678
                        }
                    })])
      | (Is_empty, Res ((Bool, _), b)) ->
          if
            let t_new__067_ = lazy (Model.get (Lazy.force new_state__031_) 0) in
            let t_old__066_ = lazy (Model.get state__029_ 0) in
            (try
               (b = true) =
                 ((Lazy.force t_new__067_).contents =
                    Ortac_runtime.Gospelstdlib.Sequence.empty)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 171;
                              pos_bol = 10238;
                              pos_cnum = 10252
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "varray_circular_spec.mli";
                              pos_lnum = 171;
                              pos_bol = 10238;
                              pos_cnum = 10285
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Varray_circular_spec" "make 42 'a'"
                 (Either.right (Res (Ortac_runtime.dummy, ()))) "is_empty"
                 [("b <-> t.contents = Sequence.empty",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 171;
                          pos_bol = 10238;
                          pos_cnum = 10252
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "varray_circular_spec.mli";
                          pos_lnum = 171;
                          pos_bol = 10238;
                          pos_cnum = 10285
                        }
                    })])
      | (Fill (pos, len, x_3), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__069_ = Model.get state__029_ 0 in
                   try
                     let __t1__070_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
                     let __t2__071_ =
                       let __t1__072_ =
                         Ortac_runtime.Gospelstdlib.(<=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                       let __t2__073_ =
                         Ortac_runtime.Gospelstdlib.(<)
                           (Ortac_runtime.Gospelstdlib.(+)
                              (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                              (Ortac_runtime.Gospelstdlib.integer_of_int len))
                           (Ortac_runtime.Gospelstdlib.Sequence.length
                              tmp__069_.contents) in
                       __t1__072_ && __t2__073_ in
                     __t1__070_ && __t2__071_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12981;
                                    pos_cnum = 12994
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12981;
                                    pos_cnum = 13056
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Varray_circular_spec"
                        "make 42 'a'" (Either.left "Invalid_argument") "fill"
                        [("0 <= pos /\\ 0 <= len /\\ pos + len < Sequence.length t.contents",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 211;
                                 pos_bol = 12981;
                                 pos_cnum = 12994
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "varray_circular_spec.mli";
                                 pos_lnum = 211;
                                 pos_bol = 12981;
                                 pos_cnum = 13056
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__069_ = Model.get state__029_ 0 in
                      (try
                         let __t1__070_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int pos) in
                         let __t2__071_ =
                           let __t1__072_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                           let __t2__073_ =
                             Ortac_runtime.Gospelstdlib.(<)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     pos)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     len))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__069_.contents) in
                           __t1__072_ && __t2__073_ in
                         __t1__070_ && __t2__071_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 211;
                                        pos_bol = 12981;
                                        pos_cnum = 12994
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname =
                                          "varray_circular_spec.mli";
                                        pos_lnum = 211;
                                        pos_bol = 12981;
                                        pos_cnum = 13056
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Varray_circular_spec"
                           "make 42 'a'" (Either.left "Invalid_argument")
                           "fill"
                           [("0 <= pos /\\ 0 <= len /\\ pos + len < Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12981;
                                    pos_cnum = 12994
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "varray_circular_spec.mli";
                                    pos_lnum = 211;
                                    pos_bol = 12981;
                                    pos_cnum = 13056
                                  }
                              })])))
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Varray_circular_spec STM tests"
        check_init_state ortac_postcond])
